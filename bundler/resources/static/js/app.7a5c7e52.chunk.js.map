{"version":3,"sources":["App.tsx"],"names":["getAuth","data","qs","stringify","grant_type","auth_token","Buffer","from","client_id","toString","axios","post","headers","Authorization","access_token","error","console","log","search","accessToken","query","api_url","get","App","React","setQuery","token","setToken","result","setResult","refreshToken","then","t","handle","setInterval","clearInterval","performSearch","v","undefined","tracks","items","map","id","title","name","artist","artists","album","link","uri","debouncedSearch","debounce","handleSearh","handleTrackClick","style","styles","container","color","card","value","placeholderTextColor","placeholder","onChangeText","length","minHeight","maxHeight","height","borderWidth","borderTopWidth","borderColor","r","divider","onPress","pointerEvents","StyleSheet","create","flex","display","paddingTop","Constants","statusBarHeight","backgroundColor","padding","borderRadius","paddingVertical"],"mappings":"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","file":"static/js/app.7a5c7e52.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {\n  ScrollView,\n  Text,\n  TextInput,\n  View,\n  StyleSheet,\n  TouchableHighlight,\n  Dimensions,\n} from \"react-native\";\nimport Constants from \"expo-constants\";\nimport qs from \"qs\";\nimport { Buffer } from \"buffer\";\nimport axios from \"axios\";\nimport debounce from \"debounce\";\n\n// crack-app https://github.com/oSumAtrIX/DownOnSpot/blob/main/src/spotify.rs\n// js-api https://github.com/JMPerez/spotify-web-api-js/blob/master/src/typings/spotify-api.d.ts\n\n// doc spotify-api https://developer.spotify.com/console/get-search-item/\n\n// rn to go go-mobile https://jondot.medium.com/react-native-why-and-how-to-build-your-native-code-in-go-9fee492f0daa\n\n// librespot go go-mobile https://github.com/librespot-org/librespot-golang\n// decode ogg go https://github.com/mccoyst/ogg\n// encode lame mp3 go https://github.com/viert/lame\n// encode flac go https://github.com/go-flac/go-flac\n\nconst client_id = \"e76ef41e470a45cb923f6f77aaae5bf1\"; // Your client id\nconst client_secret = \"f170d1874c8d46d3911f6066b6ac822a\"; // Your secret\n\nconst getAuth = async () => {\n  try {\n    const token_url = \"https://accounts.spotify.com/api/token\";\n    const data = qs.stringify({ grant_type: \"client_credentials\" });\n\n    const auth_token = Buffer.from(`${client_id}:${client_secret}`).toString(\n      \"base64\"\n    );\n\n    const response = await axios.post(token_url, data, {\n      headers: {\n        Authorization: `Basic ${auth_token}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    });\n    return response.data.access_token;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst search = async (accessToken: string, query: string) => {\n  const api_url = `https://api.spotify.com/v1/search?q=${query}&type=track&market=US&limit=10`;\n  try {\n    const response = await axios.get(api_url, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\ntype Track = {\n  id: string;\n  artist: string;\n  title: string;\n  album: string;\n  link: string;\n};\n\nconst refreshTokenTime = 1000 * 60 * 60;\n\nexport default function App() {\n  const [query, setQuery] = React.useState(\"\");\n  const [token, setToken] = React.useState(\"\");\n  const [result, setResult] = React.useState<Track[]>([]);\n\n  const refreshToken = React.useCallback(() => {\n    getAuth().then((t) => {\n      setToken(t);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    refreshToken();\n\n    const handle = setInterval(() => {\n      refreshToken();\n    }, refreshTokenTime);\n\n    return () => {\n      clearInterval(handle);\n    };\n  }, [refreshToken]);\n\n  const performSearch = React.useCallback(\n    async (v: string) => {\n      const result: TrackSearchResponse = await search(token, v);\n      if (result === undefined) return setResult([]);\n      const tracks: TrackObjectFull[] = result.tracks.items;\n      setResult(\n        tracks.map((t) => ({\n          id: t.id,\n          title: t.name,\n          artist: t.artists[0].name,\n          album: t.album.name,\n          link: t.uri,\n        }))\n      );\n    },\n    [token]\n  );\n\n  const debouncedSearch = debounce(performSearch, 500);\n\n  const handleSearh = React.useCallback(\n    async (v: string) => {\n      debouncedSearch(v);\n      setQuery(v);\n    },\n    [debouncedSearch]\n  );\n\n  const handleTrackClick = React.useCallback(async (link: string) => {\n    console.log(link);\n    setResult([]);\n    setQuery(\"\");\n    // const { data } = await axios.get(link);\n    // console.log(data);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text>Token:</Text>\n        <Text style={{ color: \"#666\" }}>{token}</Text>\n        <View style={styles.card}>\n          <TextInput\n            style={styles.search}\n            value={query}\n            placeholderTextColor=\"#888\"\n            placeholder=\"Search...\"\n            onChangeText={handleSearh}\n          />\n        </View>\n      </View>\n      {!!result.length && (\n        <View\n          style={{\n            minHeight: 100,\n            maxHeight: 400,\n            height: \"30%\",\n            borderWidth: 2,\n            borderTopWidth: 0,\n            borderColor: \"#ccc\",\n          }}\n        >\n          <ScrollView>\n            {result.map((r) => (\n              <>\n                <View style={styles.divider} />\n                <TouchableHighlight onPress={() => handleTrackClick(r.link)}>\n                  <View style={styles.card} pointerEvents=\"auto\">\n                    <Text>#{r.id}</Text>\n                    <Text>\n                      {r.artist} - {r.title}\n                    </Text>\n                    <Text>{`Album: ${r.album}`}</Text>\n                    <Text>{`Link: ${r.link}`}</Text>\n                  </View>\n                </TouchableHighlight>\n              </>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: \"#ecf0f1\",\n    padding: 8,\n  },\n  search: {\n    borderWidth: 1,\n    borderRadius: 4,\n    padding: 4,\n    flex: 1,\n  },\n  divider: { paddingVertical: 4 },\n  card: { padding: 16, backgroundColor: \"#fff\", borderRadius: 4 },\n});\n"],"sourceRoot":""}